package cmd

import (
	"context"
	"fmt"
	"os"

	"github.com/spf13/cobra"
)

var (
	version   = "dev"
	commit    = "none"
	buildDate = "unknown"
	goVersion = "unknown"
)

var rootCmd = &cobra.Command{
	Use:   "{{.AppName}}",
	Short: "{{.Description}}",
	Long: `{{.Description}}

A sophisticated API for {{.Domain}} management with comprehensive features
including database integration, migration support, and modern tooling.`,
	Version: version,
}

func Execute() error {
	return rootCmd.Execute()
}

func ExecuteContext(ctx context.Context) error {
	return rootCmd.ExecuteContext(ctx)
}

func SetVersionInfo(ver, gitCommit, buildTime, goVer string) {
	version = ver
	commit = gitCommit
	buildDate = buildTime
	goVersion = goVer
	rootCmd.Version = version
}

func init() {
	// Version command
	var versionCmd = &cobra.Command{
		Use:   "version",
		Short: "Display version information",
		Run: func(cmd *cobra.Command, args []string) {
			fmt.Printf("{{.AppName}} version %s\n", version)
			fmt.Printf("commit: %s\n", commit)
			fmt.Printf("built on: %s\n", buildDate)
			fmt.Printf("built with: %s\n", goVersion)
		},
	}

	rootCmd.AddCommand(versionCmd)

	// Register subcommands
	RegisterServeCommand(rootCmd)
	RegisterMigrateCommand(rootCmd)
}

// Helper function for environment variables with defaults
func getEnv(key, defaultValue string) string {
	if value := os.Getenv(key); value != "" {
		return value
	}
	return defaultValue
}