# {{.AppName}}

{{.Description}}

## Quick Start

```bash
# Start development environment
make dev

# Run migrations
make migrate-up

# Run tests
make test
```

## Development

This project uses container-based development. All commands should be run through the Makefile.

### Prerequisites

- Docker and Docker Compose
- Make

### Common Commands

- `make dev` - Start development server with hot reload
- `make test` - Run all tests
- `make lint` - Run linter
- `make migrate-create name=<migration_name>` - Create a new migration
- `make psql` - Open PostgreSQL shell

## API Documentation

The API uses envelope responses with cursor-based pagination.

### Endpoints

- `GET /api/v1/health` - Health check
- `GET /api/v1/{{.DomainLower}}s` - List {{.DomainLower}}s
- `POST /api/v1/{{.DomainLower}}s` - Create {{.DomainLower}}
- `GET /api/v1/{{.DomainLower}}s/:id` - Get {{.DomainLower}}
- `PATCH /api/v1/{{.DomainLower}}s/:id` - Update {{.DomainLower}}
- `DELETE /api/v1/{{.DomainLower}}s/:id` - Delete {{.DomainLower}}

## Configuration

Configuration is done through environment variables only (12-factor app methodology).

See `.env.example` for available configuration options.

## Testing

Tests use standard Go testing with testify assertions:

```bash
# Run all tests
make test

# Run with coverage
make test-coverage
```

## Deployment

Build the production Docker image:

```bash
make docker-build
```